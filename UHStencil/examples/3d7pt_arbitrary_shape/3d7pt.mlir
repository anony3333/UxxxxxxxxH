gpu.module @stencil_3d7pt_kernel {
  llvm.func @stencil_3d7pt_kernel(%arg0: !llvm.ptr<f64>, %arg1: !llvm.ptr<f64>, %arg2: i32, %arg3: i32, %arg4: i32, %arg5: i32, %arg6: i32, %arg7: i32, %arg8: i32, %arg9: !llvm.ptr<f64>, %arg10: !llvm.ptr<f64>, %arg11: i32, %arg12: i32, %arg13: i32, %arg14: i32, %arg15: i32, %arg16: i32, %arg17: i32) attributes {gpu.kernel, nvvm.kernel} {
    %0 = llvm.mlir.undef : !llvm.struct<(ptr<f64>, ptr<f64>, i32, array<3 x i32>, array<3 x i32>)>
    %1 = llvm.insertvalue %arg0, %0[0] : !llvm.struct<(ptr<f64>, ptr<f64>, i32, array<3 x i32>, array<3 x i32>)>
    %2 = llvm.insertvalue %arg1, %1[1] : !llvm.struct<(ptr<f64>, ptr<f64>, i32, array<3 x i32>, array<3 x i32>)>
    %3 = llvm.insertvalue %arg2, %2[2] : !llvm.struct<(ptr<f64>, ptr<f64>, i32, array<3 x i32>, array<3 x i32>)>
    %4 = llvm.insertvalue %arg3, %3[3, 0] : !llvm.struct<(ptr<f64>, ptr<f64>, i32, array<3 x i32>, array<3 x i32>)>
    %5 = llvm.insertvalue %arg6, %4[4, 0] : !llvm.struct<(ptr<f64>, ptr<f64>, i32, array<3 x i32>, array<3 x i32>)>
    %6 = llvm.insertvalue %arg4, %5[3, 1] : !llvm.struct<(ptr<f64>, ptr<f64>, i32, array<3 x i32>, array<3 x i32>)>
    %7 = llvm.insertvalue %arg7, %6[4, 1] : !llvm.struct<(ptr<f64>, ptr<f64>, i32, array<3 x i32>, array<3 x i32>)>
    %8 = llvm.insertvalue %arg5, %7[3, 2] : !llvm.struct<(ptr<f64>, ptr<f64>, i32, array<3 x i32>, array<3 x i32>)>
    %9 = llvm.insertvalue %arg8, %8[4, 2] : !llvm.struct<(ptr<f64>, ptr<f64>, i32, array<3 x i32>, array<3 x i32>)>
    %10 = llvm.mlir.undef : !llvm.struct<(ptr<f64>, ptr<f64>, i32, array<3 x i32>, array<3 x i32>)>
    %11 = llvm.insertvalue %arg9, %10[0] : !llvm.struct<(ptr<f64>, ptr<f64>, i32, array<3 x i32>, array<3 x i32>)>
    %12 = llvm.insertvalue %arg10, %11[1] : !llvm.struct<(ptr<f64>, ptr<f64>, i32, array<3 x i32>, array<3 x i32>)>
    %13 = llvm.insertvalue %arg11, %12[2] : !llvm.struct<(ptr<f64>, ptr<f64>, i32, array<3 x i32>, array<3 x i32>)>
    %14 = llvm.insertvalue %arg12, %13[3, 0] : !llvm.struct<(ptr<f64>, ptr<f64>, i32, array<3 x i32>, array<3 x i32>)>
    %15 = llvm.insertvalue %arg15, %14[4, 0] : !llvm.struct<(ptr<f64>, ptr<f64>, i32, array<3 x i32>, array<3 x i32>)>
    %16 = llvm.insertvalue %arg13, %15[3, 1] : !llvm.struct<(ptr<f64>, ptr<f64>, i32, array<3 x i32>, array<3 x i32>)>
    %17 = llvm.insertvalue %arg16, %16[4, 1] : !llvm.struct<(ptr<f64>, ptr<f64>, i32, array<3 x i32>, array<3 x i32>)>
    %18 = llvm.insertvalue %arg14, %17[3, 2] : !llvm.struct<(ptr<f64>, ptr<f64>, i32, array<3 x i32>, array<3 x i32>)>
    %19 = llvm.insertvalue %arg17, %18[4, 2] : !llvm.struct<(ptr<f64>, ptr<f64>, i32, array<3 x i32>, array<3 x i32>)>
    %20 = llvm.mlir.constant(1.000000e-01 : f64) : f64
    %21 = llvm.mlir.constant(2.000000e-01 : f64) : f64
    %22 = llvm.mlir.constant(3.000000e-01 : f64) : f64
    %23 = llvm.mlir.constant(4.000000e-01 : f64) : f64
    %24 = llvm.mlir.constant(5.000000e-01 : f64) : f64
    %25 = llvm.mlir.constant(6.000000e-01 : f64) : f64
    %26 = llvm.mlir.constant(1 : index) : i32
    %27 = llvm.mlir.constant(0.69999999999999996 : f64) : f64
    %28 = llvm.mlir.constant(2 : index) : i32
    %29 = nvvm.read.ptx.sreg.ctaid.x : i32
    %30 = nvvm.read.ptx.sreg.tid.x : i32
    %31 = nvvm.read.ptx.sreg.tid.y : i32
    llvm.br ^bb1
  ^bb1:  // pred: ^bb0
    %32 = llvm.add %29, %28  : i32
    %33 = llvm.extractvalue %9[1] : !llvm.struct<(ptr<f64>, ptr<f64>, i32, array<3 x i32>, array<3 x i32>)>
    %34 = llvm.mlir.constant(66564 : index) : i32
    %35 = llvm.mul %32, %34  : i32
    %36 = llvm.mlir.constant(258 : index) : i32
    %37 = llvm.mul %30, %36  : i32
    %38 = llvm.add %35, %37  : i32
    %39 = llvm.add %38, %31  : i32
    %40 = llvm.getelementptr %33[%39] : (!llvm.ptr<f64>, i32) -> !llvm.ptr<f64>
    %41 = llvm.load %40 : !llvm.ptr<f64>
    %42 = llvm.fmul %20, %41  : f64
    %43 = llvm.add %29, %26  : i32
    %44 = llvm.extractvalue %9[1] : !llvm.struct<(ptr<f64>, ptr<f64>, i32, array<3 x i32>, array<3 x i32>)>
    %45 = llvm.mlir.constant(66564 : index) : i32
    %46 = llvm.mul %43, %45  : i32
    %47 = llvm.mlir.constant(258 : index) : i32
    %48 = llvm.mul %30, %47  : i32
    %49 = llvm.add %46, %48  : i32
    %50 = llvm.add %49, %31  : i32
    %51 = llvm.getelementptr %44[%50] : (!llvm.ptr<f64>, i32) -> !llvm.ptr<f64>
    %52 = llvm.load %51 : !llvm.ptr<f64>
    %53 = llvm.fmul %21, %52  : f64
    %54 = llvm.fadd %42, %53  : f64
    %55 = llvm.extractvalue %9[1] : !llvm.struct<(ptr<f64>, ptr<f64>, i32, array<3 x i32>, array<3 x i32>)>
    %56 = llvm.mlir.constant(66564 : index) : i32
    %57 = llvm.mul %29, %56  : i32
    %58 = llvm.mlir.constant(258 : index) : i32
    %59 = llvm.mul %30, %58  : i32
    %60 = llvm.add %57, %59  : i32
    %61 = llvm.add %60, %31  : i32
    %62 = llvm.getelementptr %55[%61] : (!llvm.ptr<f64>, i32) -> !llvm.ptr<f64>
    %63 = llvm.load %62 : !llvm.ptr<f64>
    %64 = llvm.fmul %22, %63  : f64
    %65 = llvm.fadd %54, %64  : f64
    %66 = llvm.add %31, %26  : i32
    %67 = llvm.extractvalue %9[1] : !llvm.struct<(ptr<f64>, ptr<f64>, i32, array<3 x i32>, array<3 x i32>)>
    %68 = llvm.mlir.constant(66564 : index) : i32
    %69 = llvm.mul %29, %68  : i32
    %70 = llvm.mlir.constant(258 : index) : i32
    %71 = llvm.mul %30, %70  : i32
    %72 = llvm.add %69, %71  : i32
    %73 = llvm.add %72, %66  : i32
    %74 = llvm.getelementptr %67[%73] : (!llvm.ptr<f64>, i32) -> !llvm.ptr<f64>
    %75 = llvm.load %74 : !llvm.ptr<f64>
    %76 = llvm.fmul %23, %75  : f64
    %77 = llvm.fadd %65, %76  : f64
    %78 = llvm.add %31, %28  : i32
    %79 = llvm.extractvalue %9[1] : !llvm.struct<(ptr<f64>, ptr<f64>, i32, array<3 x i32>, array<3 x i32>)>
    %80 = llvm.mlir.constant(66564 : index) : i32
    %81 = llvm.mul %29, %80  : i32
    %82 = llvm.mlir.constant(258 : index) : i32
    %83 = llvm.mul %30, %82  : i32
    %84 = llvm.add %81, %83  : i32
    %85 = llvm.add %84, %78  : i32
    %86 = llvm.getelementptr %79[%85] : (!llvm.ptr<f64>, i32) -> !llvm.ptr<f64>
    %87 = llvm.load %86 : !llvm.ptr<f64>
    %88 = llvm.fmul %24, %87  : f64
    %89 = llvm.fadd %77, %88  : f64
    %90 = llvm.add %30, %26  : i32
    %91 = llvm.extractvalue %9[1] : !llvm.struct<(ptr<f64>, ptr<f64>, i32, array<3 x i32>, array<3 x i32>)>
    %92 = llvm.mlir.constant(66564 : index) : i32
    %93 = llvm.mul %29, %92  : i32
    %94 = llvm.mlir.constant(258 : index) : i32
    %95 = llvm.mul %90, %94  : i32
    %96 = llvm.add %93, %95  : i32
    %97 = llvm.add %96, %31  : i32
    %98 = llvm.getelementptr %91[%97] : (!llvm.ptr<f64>, i32) -> !llvm.ptr<f64>
    %99 = llvm.load %98 : !llvm.ptr<f64>
    %100 = llvm.fmul %25, %99  : f64
    %101 = llvm.fadd %89, %100  : f64
    %102 = llvm.add %30, %28  : i32
    %103 = llvm.extractvalue %9[1] : !llvm.struct<(ptr<f64>, ptr<f64>, i32, array<3 x i32>, array<3 x i32>)>
    %104 = llvm.mlir.constant(66564 : index) : i32
    %105 = llvm.mul %29, %104  : i32
    %106 = llvm.mlir.constant(258 : index) : i32
    %107 = llvm.mul %102, %106  : i32
    %108 = llvm.add %105, %107  : i32
    %109 = llvm.add %108, %31  : i32
    %110 = llvm.getelementptr %103[%109] : (!llvm.ptr<f64>, i32) -> !llvm.ptr<f64>
    %111 = llvm.load %110 : !llvm.ptr<f64>
    %112 = llvm.fmul %27, %111  : f64
    %113 = llvm.fadd %101, %112  : f64
    %114 = llvm.extractvalue %19[1] : !llvm.struct<(ptr<f64>, ptr<f64>, i32, array<3 x i32>, array<3 x i32>)>
    %115 = llvm.mlir.constant(66564 : index) : i32
    %116 = llvm.mul %29, %115  : i32
    %117 = llvm.mlir.constant(258 : index) : i32
    %118 = llvm.mul %30, %117  : i32
    %119 = llvm.add %116, %118  : i32
    %120 = llvm.add %119, %31  : i32
    %121 = llvm.getelementptr %114[%120] : (!llvm.ptr<f64>, i32) -> !llvm.ptr<f64>
    llvm.store %113, %121 : !llvm.ptr<f64>
    llvm.return
  }
}
