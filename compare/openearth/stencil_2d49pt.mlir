module {
func @fastwavesuv(%arg0: !stencil.field<?x?x0xf64>, %arg1: !stencil.field<?x?x?xf64>) attributes {stencil.program} {
%in0 = stencil.cast %arg0([-4, -4, -4] : [68, 68, 68]) : (!stencil.field<?x?x0xf64>) -> !stencil.field<72x72x0xf64>
%out0 = stencil.cast %arg1([-4, -4, -4] : [68, 68, 68]) : (!stencil.field<?x?x?xf64>) -> !stencil.field<72x72x72xf64>
%21 = stencil.load %in0 : (!stencil.field<72x72x0xf64>) -> !stencil.temp<?x?x0xf64>
%51 = stencil.apply (%arg2 = %21 : !stencil.temp<?x?x0xf64>) -> !stencil.temp<?x?x?xf64> {
%42 = constant 1.000000e-01: f64
%43 = constant 2.000000e-01: f64
%44 = constant 3.000000e-01: f64
%45 = constant 4.000000e-01: f64
%46 = constant 5.000000e-01: f64
%47 = constant 6.000000e-01: f64
%48 = constant 7.000000e-01: f64
%49 = stencil.access %arg2 [-3, -3, 0] : (!stencil.temp<?x?x0xf64>) -> f64
%50 = stencil.access %arg2 [-3, -2, 0] : (!stencil.temp<?x?x0xf64>) -> f64
%51 = stencil.access %arg2 [-3, -1, 0] : (!stencil.temp<?x?x0xf64>) -> f64
%52 = stencil.access %arg2 [-3, 0, 0] : (!stencil.temp<?x?x0xf64>) -> f64
%53 = stencil.access %arg2 [-3, 1, 0] : (!stencil.temp<?x?x0xf64>) -> f64
%54 = stencil.access %arg2 [-3, 2, 0] : (!stencil.temp<?x?x0xf64>) -> f64
%55 = stencil.access %arg2 [-3, 3, 0] : (!stencil.temp<?x?x0xf64>) -> f64
%56 = stencil.access %arg2 [-2, -3, 0] : (!stencil.temp<?x?x0xf64>) -> f64
%57 = stencil.access %arg2 [-2, -2, 0] : (!stencil.temp<?x?x0xf64>) -> f64
%58 = stencil.access %arg2 [-2, -1, 0] : (!stencil.temp<?x?x0xf64>) -> f64
%59 = stencil.access %arg2 [-2, 0, 0] : (!stencil.temp<?x?x0xf64>) -> f64
%60 = stencil.access %arg2 [-2, 1, 0] : (!stencil.temp<?x?x0xf64>) -> f64
%61 = stencil.access %arg2 [-2, 2, 0] : (!stencil.temp<?x?x0xf64>) -> f64
%62 = stencil.access %arg2 [-2, 3, 0] : (!stencil.temp<?x?x0xf64>) -> f64
%63 = stencil.access %arg2 [-1, -3, 0] : (!stencil.temp<?x?x0xf64>) -> f64
%64 = stencil.access %arg2 [-1, -2, 0] : (!stencil.temp<?x?x0xf64>) -> f64
%65 = stencil.access %arg2 [-1, -1, 0] : (!stencil.temp<?x?x0xf64>) -> f64
%66 = stencil.access %arg2 [-1, 0, 0] : (!stencil.temp<?x?x0xf64>) -> f64
%67 = stencil.access %arg2 [-1, 1, 0] : (!stencil.temp<?x?x0xf64>) -> f64
%68 = stencil.access %arg2 [-1, 2, 0] : (!stencil.temp<?x?x0xf64>) -> f64
%69 = stencil.access %arg2 [-1, 3, 0] : (!stencil.temp<?x?x0xf64>) -> f64
%70 = stencil.access %arg2 [0, -3, 0] : (!stencil.temp<?x?x0xf64>) -> f64
%71 = stencil.access %arg2 [0, -2, 0] : (!stencil.temp<?x?x0xf64>) -> f64
%72 = stencil.access %arg2 [0, -1, 0] : (!stencil.temp<?x?x0xf64>) -> f64
%73 = stencil.access %arg2 [0, 0, 0] : (!stencil.temp<?x?x0xf64>) -> f64
%74 = stencil.access %arg2 [0, 1, 0] : (!stencil.temp<?x?x0xf64>) -> f64
%75 = stencil.access %arg2 [0, 2, 0] : (!stencil.temp<?x?x0xf64>) -> f64
%76 = stencil.access %arg2 [0, 3, 0] : (!stencil.temp<?x?x0xf64>) -> f64
%77 = stencil.access %arg2 [1, -3, 0] : (!stencil.temp<?x?x0xf64>) -> f64
%78 = stencil.access %arg2 [1, -2, 0] : (!stencil.temp<?x?x0xf64>) -> f64
%79 = stencil.access %arg2 [1, -1, 0] : (!stencil.temp<?x?x0xf64>) -> f64
%80 = stencil.access %arg2 [1, 0, 0] : (!stencil.temp<?x?x0xf64>) -> f64
%81 = stencil.access %arg2 [1, 1, 0] : (!stencil.temp<?x?x0xf64>) -> f64
%82 = stencil.access %arg2 [1, 2, 0] : (!stencil.temp<?x?x0xf64>) -> f64
%83 = stencil.access %arg2 [1, 3, 0] : (!stencil.temp<?x?x0xf64>) -> f64
%84 = stencil.access %arg2 [2, -3, 0] : (!stencil.temp<?x?x0xf64>) -> f64
%85 = stencil.access %arg2 [2, -2, 0] : (!stencil.temp<?x?x0xf64>) -> f64
%86 = stencil.access %arg2 [2, -1, 0] : (!stencil.temp<?x?x0xf64>) -> f64
%87 = stencil.access %arg2 [2, 0, 0] : (!stencil.temp<?x?x0xf64>) -> f64
%88 = stencil.access %arg2 [2, 1, 0] : (!stencil.temp<?x?x0xf64>) -> f64
%89 = stencil.access %arg2 [2, 2, 0] : (!stencil.temp<?x?x0xf64>) -> f64
%90 = stencil.access %arg2 [2, 3, 0] : (!stencil.temp<?x?x0xf64>) -> f64
%91 = stencil.access %arg2 [3, -3, 0] : (!stencil.temp<?x?x0xf64>) -> f64
%92 = stencil.access %arg2 [3, -2, 0] : (!stencil.temp<?x?x0xf64>) -> f64
%93 = stencil.access %arg2 [3, -1, 0] : (!stencil.temp<?x?x0xf64>) -> f64
%94 = stencil.access %arg2 [3, 0, 0] : (!stencil.temp<?x?x0xf64>) -> f64
%95 = stencil.access %arg2 [3, 1, 0] : (!stencil.temp<?x?x0xf64>) -> f64
%96 = stencil.access %arg2 [3, 2, 0] : (!stencil.temp<?x?x0xf64>) -> f64
%97 = stencil.access %arg2 [3, 3, 0] : (!stencil.temp<?x?x0xf64>) -> f64
%98 = mulf %42, %49 : f64
%99 = mulf %43, %50 : f64
%100 = mulf %44, %51 : f64
%101 = mulf %45, %52 : f64
%102 = mulf %46, %53 : f64
%103 = mulf %47, %54 : f64
%104 = mulf %48, %55 : f64
%105 = mulf %42, %56 : f64
%106 = mulf %43, %57 : f64
%107 = mulf %44, %58 : f64
%108 = mulf %45, %59 : f64
%109 = mulf %46, %60 : f64
%110 = mulf %47, %61 : f64
%111 = mulf %48, %62 : f64
%112 = mulf %42, %63 : f64
%113 = mulf %43, %64 : f64
%114 = mulf %44, %65 : f64
%115 = mulf %45, %66 : f64
%116 = mulf %46, %67 : f64
%117 = mulf %47, %68 : f64
%118 = mulf %48, %69 : f64
%119 = mulf %42, %70 : f64
%120 = mulf %43, %71 : f64
%121 = mulf %44, %72 : f64
%122 = mulf %45, %73 : f64
%123 = mulf %46, %74 : f64
%124 = mulf %47, %75 : f64
%125 = mulf %48, %76 : f64
%126 = mulf %42, %77 : f64
%127 = mulf %43, %78 : f64
%128 = mulf %44, %79 : f64
%129 = mulf %45, %80 : f64
%130 = mulf %46, %81 : f64
%131 = mulf %47, %82 : f64
%132 = mulf %48, %83 : f64
%133 = mulf %42, %84 : f64
%134 = mulf %43, %85 : f64
%135 = mulf %44, %86 : f64
%136 = mulf %45, %87 : f64
%137 = mulf %46, %88 : f64
%138 = mulf %47, %89 : f64
%139 = mulf %48, %90 : f64
%140 = mulf %42, %91 : f64
%141 = mulf %43, %92 : f64
%142 = mulf %44, %93 : f64
%143 = mulf %45, %94 : f64
%144 = mulf %46, %95 : f64
%145 = mulf %47, %96 : f64
%146 = mulf %48, %97 : f64
%147 = addf %98, %99 : f64
%148 = addf %147, %100 : f64
%149 = addf %148, %101 : f64
%150 = addf %149, %102 : f64
%151 = addf %150, %103 : f64
%152 = addf %151, %104 : f64
%153 = addf %152, %105 : f64
%154 = addf %153, %106 : f64
%155 = addf %154, %107 : f64
%156 = addf %155, %108 : f64
%157 = addf %156, %109 : f64
%158 = addf %157, %110 : f64
%159 = addf %158, %111 : f64
%160 = addf %159, %112 : f64
%161 = addf %160, %113 : f64
%162 = addf %161, %114 : f64
%163 = addf %162, %115 : f64
%164 = addf %163, %116 : f64
%165 = addf %164, %117 : f64
%166 = addf %165, %118 : f64
%167 = addf %166, %119 : f64
%168 = addf %167, %120 : f64
%169 = addf %168, %121 : f64
%170 = addf %169, %122 : f64
%171 = addf %170, %123 : f64
%172 = addf %171, %124 : f64
%173 = addf %172, %125 : f64
%174 = addf %173, %126 : f64
%175 = addf %174, %127 : f64
%176 = addf %175, %128 : f64
%177 = addf %176, %129 : f64
%178 = addf %177, %130 : f64
%179 = addf %178, %131 : f64
%180 = addf %179, %132 : f64
%181 = addf %180, %133 : f64
%182 = addf %181, %134 : f64
%183 = addf %182, %135 : f64
%184 = addf %183, %136 : f64
%185 = addf %184, %137 : f64
%186 = addf %185, %138 : f64
%187 = addf %186, %139 : f64
%188 = addf %187, %140 : f64
%189 = addf %188, %141 : f64
%190 = addf %189, %142 : f64
%191 = addf %190, %143 : f64
%192 = addf %191, %144 : f64
%193 = addf %192, %145 : f64
%194 = addf %193, %146 : f64
%195 = stencil.store_result %194 : (f64) -> !stencil.result<f64>
stencil.return %195 : !stencil.result<f64>
}
stencil.store %51 to %out0([0, 0, 0] : [64, 64, 1]) : !stencil.temp<?x?x?xf64> to !stencil.field<72x72x72xf64>
return
}
}
