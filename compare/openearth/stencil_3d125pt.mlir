module {
func @fastwavesuv(%arg0: !stencil.field<?x?x?xf64>, %arg1: !stencil.field<?x?x?xf64>) attributes {stencil.program} {
%in0 = stencil.cast %arg0([-4, -4, -4] : [68, 68, 68]) : (!stencil.field<?x?x?xf64>) -> !stencil.field<72x72x72xf64>
%out0 = stencil.cast %arg1([-4, -4, -4] : [68, 68, 68]) : (!stencil.field<?x?x?xf64>) -> !stencil.field<72x72x72xf64>
%21 = stencil.load %in0 : (!stencil.field<72x72x72xf64>) -> !stencil.temp<?x?x?xf64>
%51 = stencil.apply (%arg2 = %21 : !stencil.temp<?x?x?xf64>) -> !stencil.temp<?x?x?xf64> {
%42 = constant 1.000000e-02: f64
%43 = constant 2.000000e-02: f64
%44 = constant 3.000000e-02: f64
%45 = constant 4.000000e-02: f64
%46 = constant 5.000000e-02: f64
%47 = stencil.access %arg2 [-2, -2, -1] : (!stencil.temp<?x?x?xf64>) -> f64
%48 = stencil.access %arg2 [-2, -2, 0] : (!stencil.temp<?x?x?xf64>) -> f64
%49 = stencil.access %arg2 [-2, -2, 1] : (!stencil.temp<?x?x?xf64>) -> f64
%50 = stencil.access %arg2 [-2, -2, -2] : (!stencil.temp<?x?x?xf64>) -> f64
%51 = stencil.access %arg2 [-2, -2, 2] : (!stencil.temp<?x?x?xf64>) -> f64
%52 = stencil.access %arg2 [-2, -1, -1] : (!stencil.temp<?x?x?xf64>) -> f64
%53 = stencil.access %arg2 [-2, -1, 0] : (!stencil.temp<?x?x?xf64>) -> f64
%54 = stencil.access %arg2 [-2, -1, 1] : (!stencil.temp<?x?x?xf64>) -> f64
%55 = stencil.access %arg2 [-2, -1, -2] : (!stencil.temp<?x?x?xf64>) -> f64
%56 = stencil.access %arg2 [-2, -1, 2] : (!stencil.temp<?x?x?xf64>) -> f64
%57 = stencil.access %arg2 [-2, 0, -1] : (!stencil.temp<?x?x?xf64>) -> f64
%58 = stencil.access %arg2 [-2, 0, 0] : (!stencil.temp<?x?x?xf64>) -> f64
%59 = stencil.access %arg2 [-2, 0, 1] : (!stencil.temp<?x?x?xf64>) -> f64
%60 = stencil.access %arg2 [-2, 0, -2] : (!stencil.temp<?x?x?xf64>) -> f64
%61 = stencil.access %arg2 [-2, 0, 2] : (!stencil.temp<?x?x?xf64>) -> f64
%62 = stencil.access %arg2 [-2, 1, -1] : (!stencil.temp<?x?x?xf64>) -> f64
%63 = stencil.access %arg2 [-2, 1, 0] : (!stencil.temp<?x?x?xf64>) -> f64
%64 = stencil.access %arg2 [-2, 1, 1] : (!stencil.temp<?x?x?xf64>) -> f64
%65 = stencil.access %arg2 [-2, 1, -2] : (!stencil.temp<?x?x?xf64>) -> f64
%66 = stencil.access %arg2 [-2, 1, 2] : (!stencil.temp<?x?x?xf64>) -> f64
%67 = stencil.access %arg2 [-2, 2, -1] : (!stencil.temp<?x?x?xf64>) -> f64
%68 = stencil.access %arg2 [-2, 2, 0] : (!stencil.temp<?x?x?xf64>) -> f64
%69 = stencil.access %arg2 [-2, 2, 1] : (!stencil.temp<?x?x?xf64>) -> f64
%70 = stencil.access %arg2 [-2, 2, -2] : (!stencil.temp<?x?x?xf64>) -> f64
%71 = stencil.access %arg2 [-2, 2, 2] : (!stencil.temp<?x?x?xf64>) -> f64
%72 = stencil.access %arg2 [-1, -2, -1] : (!stencil.temp<?x?x?xf64>) -> f64
%73 = stencil.access %arg2 [-1, -2, 0] : (!stencil.temp<?x?x?xf64>) -> f64
%74 = stencil.access %arg2 [-1, -2, 1] : (!stencil.temp<?x?x?xf64>) -> f64
%75 = stencil.access %arg2 [-1, -2, -2] : (!stencil.temp<?x?x?xf64>) -> f64
%76 = stencil.access %arg2 [-1, -2, 2] : (!stencil.temp<?x?x?xf64>) -> f64
%77 = stencil.access %arg2 [-1, -1, -1] : (!stencil.temp<?x?x?xf64>) -> f64
%78 = stencil.access %arg2 [-1, -1, 0] : (!stencil.temp<?x?x?xf64>) -> f64
%79 = stencil.access %arg2 [-1, -1, 1] : (!stencil.temp<?x?x?xf64>) -> f64
%80 = stencil.access %arg2 [-1, -1, -2] : (!stencil.temp<?x?x?xf64>) -> f64
%81 = stencil.access %arg2 [-1, -1, 2] : (!stencil.temp<?x?x?xf64>) -> f64
%82 = stencil.access %arg2 [-1, 0, -1] : (!stencil.temp<?x?x?xf64>) -> f64
%83 = stencil.access %arg2 [-1, 0, 0] : (!stencil.temp<?x?x?xf64>) -> f64
%84 = stencil.access %arg2 [-1, 0, 1] : (!stencil.temp<?x?x?xf64>) -> f64
%85 = stencil.access %arg2 [-1, 0, -2] : (!stencil.temp<?x?x?xf64>) -> f64
%86 = stencil.access %arg2 [-1, 0, 2] : (!stencil.temp<?x?x?xf64>) -> f64
%87 = stencil.access %arg2 [-1, 1, -1] : (!stencil.temp<?x?x?xf64>) -> f64
%88 = stencil.access %arg2 [-1, 1, 0] : (!stencil.temp<?x?x?xf64>) -> f64
%89 = stencil.access %arg2 [-1, 1, 1] : (!stencil.temp<?x?x?xf64>) -> f64
%90 = stencil.access %arg2 [-1, 1, -2] : (!stencil.temp<?x?x?xf64>) -> f64
%91 = stencil.access %arg2 [-1, 1, 2] : (!stencil.temp<?x?x?xf64>) -> f64
%92 = stencil.access %arg2 [-1, 2, -1] : (!stencil.temp<?x?x?xf64>) -> f64
%93 = stencil.access %arg2 [-1, 2, 0] : (!stencil.temp<?x?x?xf64>) -> f64
%94 = stencil.access %arg2 [-1, 2, 1] : (!stencil.temp<?x?x?xf64>) -> f64
%95 = stencil.access %arg2 [-1, 2, -2] : (!stencil.temp<?x?x?xf64>) -> f64
%96 = stencil.access %arg2 [-1, 2, 2] : (!stencil.temp<?x?x?xf64>) -> f64
%97 = stencil.access %arg2 [0, -2, -1] : (!stencil.temp<?x?x?xf64>) -> f64
%98 = stencil.access %arg2 [0, -2, 0] : (!stencil.temp<?x?x?xf64>) -> f64
%99 = stencil.access %arg2 [0, -2, 1] : (!stencil.temp<?x?x?xf64>) -> f64
%100 = stencil.access %arg2 [0, -2, -2] : (!stencil.temp<?x?x?xf64>) -> f64
%101 = stencil.access %arg2 [0, -2, 2] : (!stencil.temp<?x?x?xf64>) -> f64
%102 = stencil.access %arg2 [0, -1, -1] : (!stencil.temp<?x?x?xf64>) -> f64
%103 = stencil.access %arg2 [0, -1, 0] : (!stencil.temp<?x?x?xf64>) -> f64
%104 = stencil.access %arg2 [0, -1, 1] : (!stencil.temp<?x?x?xf64>) -> f64
%105 = stencil.access %arg2 [0, -1, -2] : (!stencil.temp<?x?x?xf64>) -> f64
%106 = stencil.access %arg2 [0, -1, 2] : (!stencil.temp<?x?x?xf64>) -> f64
%107 = stencil.access %arg2 [0, 0, -1] : (!stencil.temp<?x?x?xf64>) -> f64
%108 = stencil.access %arg2 [0, 0, 0] : (!stencil.temp<?x?x?xf64>) -> f64
%109 = stencil.access %arg2 [0, 0, 1] : (!stencil.temp<?x?x?xf64>) -> f64
%110 = stencil.access %arg2 [0, 0, -2] : (!stencil.temp<?x?x?xf64>) -> f64
%111 = stencil.access %arg2 [0, 0, 2] : (!stencil.temp<?x?x?xf64>) -> f64
%112 = stencil.access %arg2 [0, 1, -1] : (!stencil.temp<?x?x?xf64>) -> f64
%113 = stencil.access %arg2 [0, 1, 0] : (!stencil.temp<?x?x?xf64>) -> f64
%114 = stencil.access %arg2 [0, 1, 1] : (!stencil.temp<?x?x?xf64>) -> f64
%115 = stencil.access %arg2 [0, 1, -2] : (!stencil.temp<?x?x?xf64>) -> f64
%116 = stencil.access %arg2 [0, 1, 2] : (!stencil.temp<?x?x?xf64>) -> f64
%117 = stencil.access %arg2 [0, 2, -1] : (!stencil.temp<?x?x?xf64>) -> f64
%118 = stencil.access %arg2 [0, 2, 0] : (!stencil.temp<?x?x?xf64>) -> f64
%119 = stencil.access %arg2 [0, 2, 1] : (!stencil.temp<?x?x?xf64>) -> f64
%120 = stencil.access %arg2 [0, 2, -2] : (!stencil.temp<?x?x?xf64>) -> f64
%121 = stencil.access %arg2 [0, 2, 2] : (!stencil.temp<?x?x?xf64>) -> f64
%122 = stencil.access %arg2 [1, -2, -1] : (!stencil.temp<?x?x?xf64>) -> f64
%123 = stencil.access %arg2 [1, -2, 0] : (!stencil.temp<?x?x?xf64>) -> f64
%124 = stencil.access %arg2 [1, -2, 1] : (!stencil.temp<?x?x?xf64>) -> f64
%125 = stencil.access %arg2 [1, -2, -2] : (!stencil.temp<?x?x?xf64>) -> f64
%126 = stencil.access %arg2 [1, -2, 2] : (!stencil.temp<?x?x?xf64>) -> f64
%127 = stencil.access %arg2 [1, -1, -1] : (!stencil.temp<?x?x?xf64>) -> f64
%128 = stencil.access %arg2 [1, -1, 0] : (!stencil.temp<?x?x?xf64>) -> f64
%129 = stencil.access %arg2 [1, -1, 1] : (!stencil.temp<?x?x?xf64>) -> f64
%130 = stencil.access %arg2 [1, -1, -2] : (!stencil.temp<?x?x?xf64>) -> f64
%131 = stencil.access %arg2 [1, -1, 2] : (!stencil.temp<?x?x?xf64>) -> f64
%132 = stencil.access %arg2 [1, 0, -1] : (!stencil.temp<?x?x?xf64>) -> f64
%133 = stencil.access %arg2 [1, 0, 0] : (!stencil.temp<?x?x?xf64>) -> f64
%134 = stencil.access %arg2 [1, 0, 1] : (!stencil.temp<?x?x?xf64>) -> f64
%135 = stencil.access %arg2 [1, 0, -2] : (!stencil.temp<?x?x?xf64>) -> f64
%136 = stencil.access %arg2 [1, 0, 2] : (!stencil.temp<?x?x?xf64>) -> f64
%137 = stencil.access %arg2 [1, 1, -1] : (!stencil.temp<?x?x?xf64>) -> f64
%138 = stencil.access %arg2 [1, 1, 0] : (!stencil.temp<?x?x?xf64>) -> f64
%139 = stencil.access %arg2 [1, 1, 1] : (!stencil.temp<?x?x?xf64>) -> f64
%140 = stencil.access %arg2 [1, 1, -2] : (!stencil.temp<?x?x?xf64>) -> f64
%141 = stencil.access %arg2 [1, 1, 2] : (!stencil.temp<?x?x?xf64>) -> f64
%142 = stencil.access %arg2 [1, 2, -1] : (!stencil.temp<?x?x?xf64>) -> f64
%143 = stencil.access %arg2 [1, 2, 0] : (!stencil.temp<?x?x?xf64>) -> f64
%144 = stencil.access %arg2 [1, 2, 1] : (!stencil.temp<?x?x?xf64>) -> f64
%145 = stencil.access %arg2 [1, 2, -2] : (!stencil.temp<?x?x?xf64>) -> f64
%146 = stencil.access %arg2 [1, 2, 2] : (!stencil.temp<?x?x?xf64>) -> f64
%147 = stencil.access %arg2 [2, -2, -1] : (!stencil.temp<?x?x?xf64>) -> f64
%148 = stencil.access %arg2 [2, -2, 0] : (!stencil.temp<?x?x?xf64>) -> f64
%149 = stencil.access %arg2 [2, -2, 1] : (!stencil.temp<?x?x?xf64>) -> f64
%150 = stencil.access %arg2 [2, -2, -2] : (!stencil.temp<?x?x?xf64>) -> f64
%151 = stencil.access %arg2 [2, -2, 2] : (!stencil.temp<?x?x?xf64>) -> f64
%152 = stencil.access %arg2 [2, -1, -1] : (!stencil.temp<?x?x?xf64>) -> f64
%153 = stencil.access %arg2 [2, -1, 0] : (!stencil.temp<?x?x?xf64>) -> f64
%154 = stencil.access %arg2 [2, -1, 1] : (!stencil.temp<?x?x?xf64>) -> f64
%155 = stencil.access %arg2 [2, -1, -2] : (!stencil.temp<?x?x?xf64>) -> f64
%156 = stencil.access %arg2 [2, -1, 2] : (!stencil.temp<?x?x?xf64>) -> f64
%157 = stencil.access %arg2 [2, 0, -1] : (!stencil.temp<?x?x?xf64>) -> f64
%158 = stencil.access %arg2 [2, 0, 0] : (!stencil.temp<?x?x?xf64>) -> f64
%159 = stencil.access %arg2 [2, 0, 1] : (!stencil.temp<?x?x?xf64>) -> f64
%160 = stencil.access %arg2 [2, 0, -2] : (!stencil.temp<?x?x?xf64>) -> f64
%161 = stencil.access %arg2 [2, 0, 2] : (!stencil.temp<?x?x?xf64>) -> f64
%162 = stencil.access %arg2 [2, 1, -1] : (!stencil.temp<?x?x?xf64>) -> f64
%163 = stencil.access %arg2 [2, 1, 0] : (!stencil.temp<?x?x?xf64>) -> f64
%164 = stencil.access %arg2 [2, 1, 1] : (!stencil.temp<?x?x?xf64>) -> f64
%165 = stencil.access %arg2 [2, 1, -2] : (!stencil.temp<?x?x?xf64>) -> f64
%166 = stencil.access %arg2 [2, 1, 2] : (!stencil.temp<?x?x?xf64>) -> f64
%167 = stencil.access %arg2 [2, 2, -1] : (!stencil.temp<?x?x?xf64>) -> f64
%168 = stencil.access %arg2 [2, 2, 0] : (!stencil.temp<?x?x?xf64>) -> f64
%169 = stencil.access %arg2 [2, 2, 1] : (!stencil.temp<?x?x?xf64>) -> f64
%170 = stencil.access %arg2 [2, 2, -2] : (!stencil.temp<?x?x?xf64>) -> f64
%171 = stencil.access %arg2 [2, 2, 2] : (!stencil.temp<?x?x?xf64>) -> f64
%172 = mulf %42, %47 : f64
%173 = mulf %43, %48 : f64
%174 = mulf %44, %49 : f64
%175 = mulf %45, %50 : f64
%176 = mulf %46, %51 : f64
%177 = mulf %42, %52 : f64
%178 = mulf %43, %53 : f64
%179 = mulf %44, %54 : f64
%180 = mulf %45, %55 : f64
%181 = mulf %46, %56 : f64
%182 = mulf %42, %57 : f64
%183 = mulf %43, %58 : f64
%184 = mulf %44, %59 : f64
%185 = mulf %45, %60 : f64
%186 = mulf %46, %61 : f64
%187 = mulf %42, %62 : f64
%188 = mulf %43, %63 : f64
%189 = mulf %44, %64 : f64
%190 = mulf %45, %65 : f64
%191 = mulf %46, %66 : f64
%192 = mulf %42, %67 : f64
%193 = mulf %43, %68 : f64
%194 = mulf %44, %69 : f64
%195 = mulf %45, %70 : f64
%196 = mulf %46, %71 : f64
%197 = mulf %42, %72 : f64
%198 = mulf %43, %73 : f64
%199 = mulf %44, %74 : f64
%200 = mulf %45, %75 : f64
%201 = mulf %46, %76 : f64
%202 = mulf %42, %77 : f64
%203 = mulf %43, %78 : f64
%204 = mulf %44, %79 : f64
%205 = mulf %45, %80 : f64
%206 = mulf %46, %81 : f64
%207 = mulf %42, %82 : f64
%208 = mulf %43, %83 : f64
%209 = mulf %44, %84 : f64
%210 = mulf %45, %85 : f64
%211 = mulf %46, %86 : f64
%212 = mulf %42, %87 : f64
%213 = mulf %43, %88 : f64
%214 = mulf %44, %89 : f64
%215 = mulf %45, %90 : f64
%216 = mulf %46, %91 : f64
%217 = mulf %42, %92 : f64
%218 = mulf %43, %93 : f64
%219 = mulf %44, %94 : f64
%220 = mulf %45, %95 : f64
%221 = mulf %46, %96 : f64
%222 = mulf %42, %97 : f64
%223 = mulf %43, %98 : f64
%224 = mulf %44, %99 : f64
%225 = mulf %45, %100 : f64
%226 = mulf %46, %101 : f64
%227 = mulf %42, %102 : f64
%228 = mulf %43, %103 : f64
%229 = mulf %44, %104 : f64
%230 = mulf %45, %105 : f64
%231 = mulf %46, %106 : f64
%232 = mulf %42, %107 : f64
%233 = mulf %43, %108 : f64
%234 = mulf %44, %109 : f64
%235 = mulf %45, %110 : f64
%236 = mulf %46, %111 : f64
%237 = mulf %42, %112 : f64
%238 = mulf %43, %113 : f64
%239 = mulf %44, %114 : f64
%240 = mulf %45, %115 : f64
%241 = mulf %46, %116 : f64
%242 = mulf %42, %117 : f64
%243 = mulf %43, %118 : f64
%244 = mulf %44, %119 : f64
%245 = mulf %45, %120 : f64
%246 = mulf %46, %121 : f64
%247 = mulf %42, %122 : f64
%248 = mulf %43, %123 : f64
%249 = mulf %44, %124 : f64
%250 = mulf %45, %125 : f64
%251 = mulf %46, %126 : f64
%252 = mulf %42, %127 : f64
%253 = mulf %43, %128 : f64
%254 = mulf %44, %129 : f64
%255 = mulf %45, %130 : f64
%256 = mulf %46, %131 : f64
%257 = mulf %42, %132 : f64
%258 = mulf %43, %133 : f64
%259 = mulf %44, %134 : f64
%260 = mulf %45, %135 : f64
%261 = mulf %46, %136 : f64
%262 = mulf %42, %137 : f64
%263 = mulf %43, %138 : f64
%264 = mulf %44, %139 : f64
%265 = mulf %45, %140 : f64
%266 = mulf %46, %141 : f64
%267 = mulf %42, %142 : f64
%268 = mulf %43, %143 : f64
%269 = mulf %44, %144 : f64
%270 = mulf %45, %145 : f64
%271 = mulf %46, %146 : f64
%272 = mulf %42, %147 : f64
%273 = mulf %43, %148 : f64
%274 = mulf %44, %149 : f64
%275 = mulf %45, %150 : f64
%276 = mulf %46, %151 : f64
%277 = mulf %42, %152 : f64
%278 = mulf %43, %153 : f64
%279 = mulf %44, %154 : f64
%280 = mulf %45, %155 : f64
%281 = mulf %46, %156 : f64
%282 = mulf %42, %157 : f64
%283 = mulf %43, %158 : f64
%284 = mulf %44, %159 : f64
%285 = mulf %45, %160 : f64
%286 = mulf %46, %161 : f64
%287 = mulf %42, %162 : f64
%288 = mulf %43, %163 : f64
%289 = mulf %44, %164 : f64
%290 = mulf %45, %165 : f64
%291 = mulf %46, %166 : f64
%292 = mulf %42, %167 : f64
%293 = mulf %43, %168 : f64
%294 = mulf %44, %169 : f64
%295 = mulf %45, %170 : f64
%296 = mulf %46, %171 : f64
%297 = addf %172, %173 : f64
%298 = addf %297, %174 : f64
%299 = addf %298, %175 : f64
%300 = addf %299, %176 : f64
%301 = addf %300, %177 : f64
%302 = addf %301, %178 : f64
%303 = addf %302, %179 : f64
%304 = addf %303, %180 : f64
%305 = addf %304, %181 : f64
%306 = addf %305, %182 : f64
%307 = addf %306, %183 : f64
%308 = addf %307, %184 : f64
%309 = addf %308, %185 : f64
%310 = addf %309, %186 : f64
%311 = addf %310, %187 : f64
%312 = addf %311, %188 : f64
%313 = addf %312, %189 : f64
%314 = addf %313, %190 : f64
%315 = addf %314, %191 : f64
%316 = addf %315, %192 : f64
%317 = addf %316, %193 : f64
%318 = addf %317, %194 : f64
%319 = addf %318, %195 : f64
%320 = addf %319, %196 : f64
%321 = addf %320, %197 : f64
%322 = addf %321, %198 : f64
%323 = addf %322, %199 : f64
%324 = addf %323, %200 : f64
%325 = addf %324, %201 : f64
%326 = addf %325, %202 : f64
%327 = addf %326, %203 : f64
%328 = addf %327, %204 : f64
%329 = addf %328, %205 : f64
%330 = addf %329, %206 : f64
%331 = addf %330, %207 : f64
%332 = addf %331, %208 : f64
%333 = addf %332, %209 : f64
%334 = addf %333, %210 : f64
%335 = addf %334, %211 : f64
%336 = addf %335, %212 : f64
%337 = addf %336, %213 : f64
%338 = addf %337, %214 : f64
%339 = addf %338, %215 : f64
%340 = addf %339, %216 : f64
%341 = addf %340, %217 : f64
%342 = addf %341, %218 : f64
%343 = addf %342, %219 : f64
%344 = addf %343, %220 : f64
%345 = addf %344, %221 : f64
%346 = addf %345, %222 : f64
%347 = addf %346, %223 : f64
%348 = addf %347, %224 : f64
%349 = addf %348, %225 : f64
%350 = addf %349, %226 : f64
%351 = addf %350, %227 : f64
%352 = addf %351, %228 : f64
%353 = addf %352, %229 : f64
%354 = addf %353, %230 : f64
%355 = addf %354, %231 : f64
%356 = addf %355, %232 : f64
%357 = addf %356, %233 : f64
%358 = addf %357, %234 : f64
%359 = addf %358, %235 : f64
%360 = addf %359, %236 : f64
%361 = addf %360, %237 : f64
%362 = addf %361, %238 : f64
%363 = addf %362, %239 : f64
%364 = addf %363, %240 : f64
%365 = addf %364, %241 : f64
%366 = addf %365, %242 : f64
%367 = addf %366, %243 : f64
%368 = addf %367, %244 : f64
%369 = addf %368, %245 : f64
%370 = addf %369, %246 : f64
%371 = addf %370, %247 : f64
%372 = addf %371, %248 : f64
%373 = addf %372, %249 : f64
%374 = addf %373, %250 : f64
%375 = addf %374, %251 : f64
%376 = addf %375, %252 : f64
%377 = addf %376, %253 : f64
%378 = addf %377, %254 : f64
%379 = addf %378, %255 : f64
%380 = addf %379, %256 : f64
%381 = addf %380, %257 : f64
%382 = addf %381, %258 : f64
%383 = addf %382, %259 : f64
%384 = addf %383, %260 : f64
%385 = addf %384, %261 : f64
%386 = addf %385, %262 : f64
%387 = addf %386, %263 : f64
%388 = addf %387, %264 : f64
%389 = addf %388, %265 : f64
%390 = addf %389, %266 : f64
%391 = addf %390, %267 : f64
%392 = addf %391, %268 : f64
%393 = addf %392, %269 : f64
%394 = addf %393, %270 : f64
%395 = addf %394, %271 : f64
%396 = addf %395, %272 : f64
%397 = addf %396, %273 : f64
%398 = addf %397, %274 : f64
%399 = addf %398, %275 : f64
%400 = addf %399, %276 : f64
%401 = addf %400, %277 : f64
%402 = addf %401, %278 : f64
%403 = addf %402, %279 : f64
%404 = addf %403, %280 : f64
%405 = addf %404, %281 : f64
%406 = addf %405, %282 : f64
%407 = addf %406, %283 : f64
%408 = addf %407, %284 : f64
%409 = addf %408, %285 : f64
%410 = addf %409, %286 : f64
%411 = addf %410, %287 : f64
%412 = addf %411, %288 : f64
%413 = addf %412, %289 : f64
%414 = addf %413, %290 : f64
%415 = addf %414, %291 : f64
%416 = addf %415, %292 : f64
%417 = addf %416, %293 : f64
%418 = addf %417, %294 : f64
%419 = addf %418, %295 : f64
%420 = addf %419, %296 : f64
%421 = stencil.store_result %420 : (f64) -> !stencil.result<f64>
stencil.return %421 : !stencil.result<f64>
}
stencil.store %51 to %out0([0, 0, 0] : [64, 64, 64]) : !stencil.temp<?x?x?xf64> to !stencil.field<72x72x72xf64>
return
}
}
